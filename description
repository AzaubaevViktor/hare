ПРОГРАММА МАКСИМУМ
==================

hare -[axdlt] arc[.ext] [file1] [file2]
1   -a: добавить в архив
        При существовании файла в архиве вопрос о замене
        При несуществовании сказать об этом, рассказать про -a и про то, что его нужно добавить

1   -x: извлечь
        При существовании вопрос о замене
        Время хранения файла тоже нужно!

    -d: удалить
        При удалении несуществующего вопрос

1   -l: список файлов

    -t: проверка целостности
        Контрольные суммы! (предложил crc32)



1 -- миннимум

РАЗБОР АРГУМЕНТОВ
=================
1. Разбор аргументов
    * Ключи
    * Список файлов
    * Имя архива
2. Проверки
    * Существует ли архив
    * Можно ли изменять архив
    * Можно ли прочитать
    * Проверка сигнатуры
    * 


СТРУКТУРА
=========

<СИГНТАУРА>
1. Файл1
2. Файл2
...
<CR>

<СИГНАТУРА>
1. Заголовок (есть вариант хранить это ??бинарным деревом?? по именам для поиска, вопрос что делать при удалении?) (Подумать над порядком)
    * имя'\0' или <LEN><ИМЯ длинны LEN>
    * Время создания
    * Оригинальная длинна
    * Сжатая длинна
    * Флаги
        : Сжат/Несжат
        : Файл из одного символа ?
    * Дерево Хаффмана
    * Смещение на следующий файл
    * Контрольная сумма
DATA
2. Заголовок
DATA
...


F1 -> F1.haf --> in DATA


БУФЕРА
    * input byte, [V,...]
    * output byte, bit  []
    если остаются неиспользованные, это нужно хранить
    Потоково считать контрольную сумму

Аналогично для декодирования


ХРАНЕНИЕ ДЕРЕВА
===============
Частота встречаемости байтов

Символ -> Частота, код
   V
Символ -> Частота, код
   V
  ...

1. Считается частота
2. Строится дерево
3. Генерация кода


ЛОГИРОВАНИЕ В ТЕСТОВЫХ СБОРКАХ (велосипед?)!

ИМЯ ФАЙЛА (../../x или только x)?
НУЖЕН ТРЕКЕР (Google Drive?)!
НУЖНО МОДУЛЬНОЕ ТЕСТИРОВАНИЕ (C_Tested)!
Нужно целостное тестирование программы (проверка файлов на совпадение, велосипед на bash)
НУЖЕН ДЕТЕКТ BIG ENDIAN и LITTLE ENDIAN!
